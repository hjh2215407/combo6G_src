// Generated by data binding compiler. Do not edit!
package com.dabinsystems.pact_app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.dabinsystems.pact_app.R;
import java.lang.Deprecated;
import java.lang.Object;
import me.grantland.widget.AutofitTextView;

public abstract class TransmitOnOffLayoutBinding extends ViewDataBinding {
  @NonNull
  public final AutofitTextView tvTransmitInfoBwTitle;

  @NonNull
  public final AutofitTextView tvTransmitInfoBwVal;

  @NonNull
  public final AutofitTextView tvTransmitOffPowerPass;

  @NonNull
  public final AutofitTextView tvTransmitOffPowerTitle;

  @NonNull
  public final AutofitTextView tvTransmitOffPowerVal;

  @NonNull
  public final AutofitTextView tvTransmitOnPowerTitle;

  @NonNull
  public final AutofitTextView tvTransmitOnPowerVal;

  @NonNull
  public final AutofitTextView tvTransmitRampDownPass;

  @NonNull
  public final AutofitTextView tvTransmitRampDownTitle;

  @NonNull
  public final AutofitTextView tvTransmitRampDownVal;

  @NonNull
  public final AutofitTextView tvTransmitRampUpPass;

  @NonNull
  public final AutofitTextView tvTransmitRampUpTitle;

  @NonNull
  public final AutofitTextView tvTransmitRampUpVal;

  protected TransmitOnOffLayoutBinding(Object _bindingComponent, View _root, int _localFieldCount,
      AutofitTextView tvTransmitInfoBwTitle, AutofitTextView tvTransmitInfoBwVal,
      AutofitTextView tvTransmitOffPowerPass, AutofitTextView tvTransmitOffPowerTitle,
      AutofitTextView tvTransmitOffPowerVal, AutofitTextView tvTransmitOnPowerTitle,
      AutofitTextView tvTransmitOnPowerVal, AutofitTextView tvTransmitRampDownPass,
      AutofitTextView tvTransmitRampDownTitle, AutofitTextView tvTransmitRampDownVal,
      AutofitTextView tvTransmitRampUpPass, AutofitTextView tvTransmitRampUpTitle,
      AutofitTextView tvTransmitRampUpVal) {
    super(_bindingComponent, _root, _localFieldCount);
    this.tvTransmitInfoBwTitle = tvTransmitInfoBwTitle;
    this.tvTransmitInfoBwVal = tvTransmitInfoBwVal;
    this.tvTransmitOffPowerPass = tvTransmitOffPowerPass;
    this.tvTransmitOffPowerTitle = tvTransmitOffPowerTitle;
    this.tvTransmitOffPowerVal = tvTransmitOffPowerVal;
    this.tvTransmitOnPowerTitle = tvTransmitOnPowerTitle;
    this.tvTransmitOnPowerVal = tvTransmitOnPowerVal;
    this.tvTransmitRampDownPass = tvTransmitRampDownPass;
    this.tvTransmitRampDownTitle = tvTransmitRampDownTitle;
    this.tvTransmitRampDownVal = tvTransmitRampDownVal;
    this.tvTransmitRampUpPass = tvTransmitRampUpPass;
    this.tvTransmitRampUpTitle = tvTransmitRampUpTitle;
    this.tvTransmitRampUpVal = tvTransmitRampUpVal;
  }

  @NonNull
  public static TransmitOnOffLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.transmit_on_off_layout, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static TransmitOnOffLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<TransmitOnOffLayoutBinding>inflateInternal(inflater, R.layout.transmit_on_off_layout, root, attachToRoot, component);
  }

  @NonNull
  public static TransmitOnOffLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.transmit_on_off_layout, null, false, component)
   */
  @NonNull
  @Deprecated
  public static TransmitOnOffLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<TransmitOnOffLayoutBinding>inflateInternal(inflater, R.layout.transmit_on_off_layout, null, false, component);
  }

  public static TransmitOnOffLayoutBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static TransmitOnOffLayoutBinding bind(@NonNull View view, @Nullable Object component) {
    return (TransmitOnOffLayoutBinding)bind(component, view, R.layout.transmit_on_off_layout);
  }
}
