// Generated by data binding compiler. Do not edit!
package com.dabinsystems.pact_app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.dabinsystems.pact_app.R;
import java.lang.Deprecated;
import java.lang.Object;
import me.grantland.widget.AutofitTextView;

public abstract class SweptSaBinding extends ViewDataBinding {
  @NonNull
  public final ConstraintLayout conAtten;

  @NonNull
  public final ConstraintLayout conOffset;

  @NonNull
  public final ConstraintLayout conRbw;

  @NonNull
  public final ConstraintLayout conRef;

  @NonNull
  public final ConstraintLayout conSpan;

  @NonNull
  public final ConstraintLayout conSweep;

  @NonNull
  public final ConstraintLayout conVbw;

  @NonNull
  public final Guideline gBottomHorizontal;

  @NonNull
  public final Guideline gHorizonCenter;

  @NonNull
  public final Guideline gLeftBottom;

  @NonNull
  public final Guideline gMarkerTable;

  @NonNull
  public final Guideline gOffset;

  @NonNull
  public final Guideline gRightBottom;

  @NonNull
  public final AutofitTextView tvAtten;

  @NonNull
  public final AutofitTextView tvAttenVal;

  @NonNull
  public final AutofitTextView tvOffset;

  @NonNull
  public final AutofitTextView tvOffsetVal;

  @NonNull
  public final AutofitTextView tvRbwLabel;

  @NonNull
  public final AutofitTextView tvRbwVal;

  @NonNull
  public final AutofitTextView tvRef;

  @NonNull
  public final AutofitTextView tvRefVal;

  @NonNull
  public final AutofitTextView tvSpanLabel;

  @NonNull
  public final AutofitTextView tvSpanVal;

  @NonNull
  public final AutofitTextView tvSweepLabel;

  @NonNull
  public final AutofitTextView tvSweepVal;

  @NonNull
  public final AutofitTextView tvVbwLabel;

  @NonNull
  public final AutofitTextView tvVbwVal;

  protected SweptSaBinding(Object _bindingComponent, View _root, int _localFieldCount,
      ConstraintLayout conAtten, ConstraintLayout conOffset, ConstraintLayout conRbw,
      ConstraintLayout conRef, ConstraintLayout conSpan, ConstraintLayout conSweep,
      ConstraintLayout conVbw, Guideline gBottomHorizontal, Guideline gHorizonCenter,
      Guideline gLeftBottom, Guideline gMarkerTable, Guideline gOffset, Guideline gRightBottom,
      AutofitTextView tvAtten, AutofitTextView tvAttenVal, AutofitTextView tvOffset,
      AutofitTextView tvOffsetVal, AutofitTextView tvRbwLabel, AutofitTextView tvRbwVal,
      AutofitTextView tvRef, AutofitTextView tvRefVal, AutofitTextView tvSpanLabel,
      AutofitTextView tvSpanVal, AutofitTextView tvSweepLabel, AutofitTextView tvSweepVal,
      AutofitTextView tvVbwLabel, AutofitTextView tvVbwVal) {
    super(_bindingComponent, _root, _localFieldCount);
    this.conAtten = conAtten;
    this.conOffset = conOffset;
    this.conRbw = conRbw;
    this.conRef = conRef;
    this.conSpan = conSpan;
    this.conSweep = conSweep;
    this.conVbw = conVbw;
    this.gBottomHorizontal = gBottomHorizontal;
    this.gHorizonCenter = gHorizonCenter;
    this.gLeftBottom = gLeftBottom;
    this.gMarkerTable = gMarkerTable;
    this.gOffset = gOffset;
    this.gRightBottom = gRightBottom;
    this.tvAtten = tvAtten;
    this.tvAttenVal = tvAttenVal;
    this.tvOffset = tvOffset;
    this.tvOffsetVal = tvOffsetVal;
    this.tvRbwLabel = tvRbwLabel;
    this.tvRbwVal = tvRbwVal;
    this.tvRef = tvRef;
    this.tvRefVal = tvRefVal;
    this.tvSpanLabel = tvSpanLabel;
    this.tvSpanVal = tvSpanVal;
    this.tvSweepLabel = tvSweepLabel;
    this.tvSweepVal = tvSweepVal;
    this.tvVbwLabel = tvVbwLabel;
    this.tvVbwVal = tvVbwVal;
  }

  @NonNull
  public static SweptSaBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup root,
      boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.swept_sa, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static SweptSaBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup root,
      boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<SweptSaBinding>inflateInternal(inflater, R.layout.swept_sa, root, attachToRoot, component);
  }

  @NonNull
  public static SweptSaBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.swept_sa, null, false, component)
   */
  @NonNull
  @Deprecated
  public static SweptSaBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<SweptSaBinding>inflateInternal(inflater, R.layout.swept_sa, null, false, component);
  }

  public static SweptSaBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static SweptSaBinding bind(@NonNull View view, @Nullable Object component) {
    return (SweptSaBinding)bind(component, view, R.layout.swept_sa);
  }
}
